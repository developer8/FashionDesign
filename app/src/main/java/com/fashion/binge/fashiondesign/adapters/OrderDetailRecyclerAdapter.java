package com.fashion.binge.fashiondesign.adapters;import android.content.Context;import android.graphics.Color;import android.support.v7.widget.RecyclerView;import android.text.Html;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import com.fashion.binge.fashiondesign.Homepage;import com.fashion.binge.fashiondesign.R;import com.fashion.binge.fashiondesign.models.OrderDetailItemModel;import com.fashion.binge.fashiondesign.models.OrderDetailModel;import java.util.List;public class OrderDetailRecyclerAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {    private static final int TYPE_HEADER = 0;    private static final int TYPE_ITEM = 1;    private static final int TYPE_SUB_ITEM = 2;    private Context context;    private OrderDetailModel orderDetailModel;    private List<OrderDetailItemModel> orderDetailItemModelList;    public OrderDetailRecyclerAdapter(Context context, OrderDetailModel orderDetailModel, List<OrderDetailItemModel> orderDetailItemModelList) {        this.context = context;        this.orderDetailModel = orderDetailModel;        this.orderDetailItemModelList = orderDetailItemModelList;    }    @Override    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {        if (viewType == TYPE_HEADER) {            View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.activity_order_detail_header_view, parent, false);            return new VHHeader(v);        } else if (viewType == TYPE_SUB_ITEM) {            View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.activity_order_detail_middle_view, parent, false);            return new VHSUBITEM(v);        } else if (viewType == TYPE_ITEM) {            View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.activity_order_detail_child_view, parent, false);            return new VHItem(v);        }        throw new RuntimeException("there is no type that matches the type " + viewType + " + make sure your using types correctly");    }    @Override    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {        if (holder instanceof VHHeader) {            final VHHeader VHheader = (VHHeader) holder;            VHheader.orderId.setText(orderDetailModel.getOrderId());            VHheader.dateAdded.setText(orderDetailModel.getDateAdded());            VHheader.paymentMethod.setText(orderDetailModel.getPaymentMethod());            VHheader.shippingMethod.setText(orderDetailModel.getShippingMethod());            VHheader.paymentDescription.setText(Html.fromHtml(orderDetailModel.getPaymentDescription()));            VHheader.shippingDescription.setText(Html.fromHtml(orderDetailModel.getShippingDescription()));        } else if (holder instanceof VHItem) {            final VHItem VHitem = (VHItem) holder;            OrderDetailItemModel orderDetailItemModel = orderDetailItemModelList.get(position - 2);            VHitem.productName.setText(orderDetailItemModel.getProductName());            VHitem.quantity.setText(String.format("Quantity: %s", orderDetailItemModel.getQuantity()));            VHitem.price.setText(orderDetailItemModel.getPrice());            List<String> sizeValue = orderDetailItemModel.getSize();            for (int i = 0; i < sizeValue.size(); i++) {                if (i != sizeValue.size() - 1) {                    VHitem.size.setText(String.format("%s,", sizeValue.get(i)));                } else {                    VHitem.size.setText(sizeValue.get(i));                }            }        } else if (holder instanceof VHSUBITEM) {            final VHSUBITEM VHsubItem = (VHSUBITEM) holder;            VHsubItem.status.setText(orderDetailModel.getStatusText());            switch (orderDetailModel.getStatusText()) {                case "Complete":                    VHsubItem.statusImage.setImageResource(R.mipmap.ic_order_tick);                    VHsubItem.status.setTextColor(Color.parseColor("#45a117"));                    break;                case "Processing":                    VHsubItem.statusImage.setImageResource(R.mipmap.ic_order_proccessing);                    VHsubItem.status.setTextColor(Color.parseColor("#c4a30c"));                    break;                default:                    VHsubItem.statusImage.setImageResource(R.mipmap.ic_order_failed);                    VHsubItem.status.setTextColor(Color.parseColor("#da4b2f"));                    break;            }        }    }    @Override    public int getItemCount() {        return orderDetailItemModelList.size() + 2;    }    @Override    public int getItemViewType(int position) {        if (isPositionHeader(position)) {            return TYPE_HEADER;        } else if (isPositionSubHeader(position)) {            return TYPE_SUB_ITEM;        }        return TYPE_ITEM;    }    public boolean isPositionHeader(int position) {        return position == 0;    }    public boolean isPositionSubHeader(int position) {        return position == 1;    }    class VHHeader extends RecyclerView.ViewHolder {        protected TextView orderId, dateAdded, paymentMethod, shippingMethod;        private TextView orderIdTitle, dateAddedTitle, paymentMethodTitle, shippingMethodTitle;        protected TextView paymentDescription, shippingDescription;        public VHHeader(View itemView) {            super(itemView);            orderIdTitle = (TextView) itemView.findViewById(R.id.order_id_title);            dateAddedTitle = (TextView) itemView.findViewById(R.id.date_added_title);            paymentMethodTitle = (TextView) itemView.findViewById(R.id.payment_method_title);            shippingMethodTitle = (TextView) itemView.findViewById(R.id.shipping_method_title);            if (!Homepage.isTablet(context)) {                LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(0, ViewGroup.LayoutParams.WRAP_CONTENT, 1);                orderIdTitle.setLayoutParams(layoutParams);                dateAddedTitle.setLayoutParams(layoutParams);                paymentMethodTitle.setLayoutParams(layoutParams);                shippingMethodTitle.setLayoutParams(layoutParams);            }            orderId = (TextView) itemView.findViewById(R.id.order_id);            dateAdded = (TextView) itemView.findViewById(R.id.date_added);            paymentMethod = (TextView) itemView.findViewById(R.id.payment_method);            shippingMethod = (TextView) itemView.findViewById(R.id.shipping_method);            paymentDescription = (TextView) itemView.findViewById(R.id.payment_description);            shippingDescription = (TextView) itemView.findViewById(R.id.shipping_description);        }    }    class VHSUBITEM extends RecyclerView.ViewHolder {        protected TextView status;        protected ImageView statusImage;        public VHSUBITEM(View itemView) {            super(itemView);            status = (TextView) itemView.findViewById(R.id.status);            statusImage = (ImageView) itemView.findViewById(R.id.status_image);        }    }    class VHItem extends RecyclerView.ViewHolder {        protected TextView productName, quantity, price, size;        public VHItem(View itemView) {            super(itemView);            productName = (TextView) itemView.findViewById(R.id.product_name);            quantity = (TextView) itemView.findViewById(R.id.quantity);            price = (TextView) itemView.findViewById(R.id.price);            size = (TextView) itemView.findViewById(R.id.size);        }    }}