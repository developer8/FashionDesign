package com.fashion.binge.fashiondesign;import android.content.SharedPreferences;import android.content.pm.ActivityInfo;import android.os.Bundle;import android.preference.PreferenceManager;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.Toolbar;import android.view.MenuItem;import android.view.View;import android.widget.ImageView;import android.widget.ListView;import android.widget.TextView;import com.fashion.binge.fashiondesign.adapters.NotificationListAdapter;import com.fashion.binge.fashiondesign.classes.SetStatusBarColor;import com.fashion.binge.fashiondesign.models.NotificationModel;import com.fashion.binge.fashiondesign.shared_preference.SharedPrefrenceInfo;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.util.ArrayList;import java.util.HashSet;import java.util.List;import java.util.Set;public class Notification extends AppCompatActivity {    private TextView toolbarTitle;    private Toolbar toolbar;    private ImageView cart, notification;    private ListView notificationList;    private TextView noNotificationContent;    private SharedPreferences sharedPreferences;    private TextView cartNumber, notificationNumber;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_notification);        if (!Homepage.isTablet(this)) {            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);        }        initialiseView();        setSupportActionBar(toolbar);        //noinspection ConstantConditions        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        SetStatusBarColor.setStausBarColor(this);        toolbarTitle.setText(R.string.notification);        cart.setVisibility(View.GONE);        cartNumber.setVisibility(View.GONE);        notification.setVisibility(View.GONE);        notificationNumber.setVisibility(View.GONE);        sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this);        SharedPreferences.Editor editor = sharedPreferences.edit();        setNotificationData();        //if first time then create this set to store id whiche helps to determine which notification has been clicked by user        if (sharedPreferences.getString(SharedPrefrenceInfo.ISFIRSTTIME, "true").equals("true")) {            Set<String> notificationId = new HashSet<>();            editor.putStringSet(SharedPrefrenceInfo.IDSET, notificationId);            editor.putString(SharedPrefrenceInfo.ISFIRSTTIME, "false");            editor.apply();        }    }    private void initialiseView() {        toolbarTitle = (TextView) findViewById(R.id.toolbar_title);        toolbar = (Toolbar) findViewById(R.id.toolbar);        cart = (ImageView) findViewById(R.id.cart);        notification = (ImageView) findViewById(R.id.notification);        notificationList = (ListView) findViewById(R.id.notification_list);        noNotificationContent = (TextView) findViewById(R.id.no_notification_content);        cartNumber = (TextView) findViewById(R.id.cart_number);        notificationNumber = (TextView) findViewById(R.id.notification_number);    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        int id = item.getItemId();        if (id == android.R.id.home) {            finish();            return true;        }        return super.onOptionsItemSelected(item);    }    private void setNotificationData() {        try {            List<NotificationModel> notificationModelList = new ArrayList<>();            JSONArray jsonArray = new JSONArray(sharedPreferences.getString(SharedPrefrenceInfo.NOTIFICATION, ""));            for (int i = 0; i < jsonArray.length(); i++) {                JSONObject jsonObject = jsonArray.getJSONObject(i);                String sellerName = jsonObject.getString("seller_name");                String sellerNickName = jsonObject.getString("seller_nickname");                String sellerAvatar = jsonObject.getString("seller_avatar");                String title = jsonObject.getString("title");                String description = jsonObject.getString("description");                String salesComboPageId = jsonObject.getString("salescombopge_id");                String image = jsonObject.getString("image");                String sellerId = jsonObject.getString("seller_id");                String metaTitle = jsonObject.getString("meta_title");                String sellerBanner = jsonObject.getString("seller_banner");                String thumb = jsonObject.getString("thumb");                String rules = jsonObject.getString("rules");                String href = jsonObject.getString("href");                String productId;                if (jsonObject.has("product_id")) {                    productId = jsonObject.getString("product_id");                } else {                    productId = "no_product_id";                }                NotificationModel notificationModel = new NotificationModel();                notificationModel.setSellerName(sellerName);                notificationModel.setSellerNickName(sellerNickName);                notificationModel.setSellerAvatar(sellerAvatar);                notificationModel.setTitle(title);                notificationModel.setDescription(description);                notificationModel.setSalesCombopgeId(salesComboPageId);                notificationModel.setImage(image);                notificationModel.setSellerId(sellerId);                notificationModel.setMetaTitle(metaTitle);                notificationModel.setSellerBanner(sellerBanner);                notificationModel.setThumb(thumb);                notificationModel.setRules(rules);                notificationModel.setHref(href);                notificationModel.setProductId(productId);                notificationModel.setBackgroundColor("#ebedf0");                notificationModelList.add(notificationModel);            }            notificationList.setAdapter(new NotificationListAdapter(Notification.this, notificationModelList));            if (notificationList.getAdapter().getCount() == 0) {                noNotificationContent.setVisibility(View.VISIBLE);            } else {                noNotificationContent.setVisibility(View.INVISIBLE);            }        } catch (JSONException e) {            e.printStackTrace();        }    }}