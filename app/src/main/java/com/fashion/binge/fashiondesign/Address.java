package com.fashion.binge.fashiondesign;import android.app.Activity;import android.content.Intent;import android.content.SharedPreferences;import android.content.pm.ActivityInfo;import android.graphics.Color;import android.os.Bundle;import android.preference.PreferenceManager;import android.support.design.widget.FloatingActionButton;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.Toolbar;import android.view.MenuItem;import android.view.View;import android.widget.ImageView;import android.widget.ListView;import android.widget.TextView;import com.fashion.binge.fashiondesign.adapters.EditAddressListAdapter;import com.fashion.binge.fashiondesign.classes.SetStatusBarColor;import com.fashion.binge.fashiondesign.classes.Utils;import com.fashion.binge.fashiondesign.interfaces.AccessTokenInfoHolder;import com.fashion.binge.fashiondesign.interfaces.EditAddressInfoHolder;import com.fashion.binge.fashiondesign.interfaces.JsonResponseHolder;import com.fashion.binge.fashiondesign.json.GetAddressData;import com.fashion.binge.fashiondesign.models.AddressModel;import com.fashion.binge.fashiondesign.shared_preference.SharedPrefrenceInfo;import com.fashion.binge.fashiondesign.sweetalertdialog.SweetAlertDialog;import org.json.JSONException;import org.json.JSONObject;import java.util.ArrayList;import java.util.List;public class Address extends AppCompatActivity {    private Toolbar toolbar;    private TextView toolbarTitle;    private ListView addressList;    private SharedPreferences sharedPreferences;    private final int ACTIVITY_REQUEST_CODE = 103;    private ImageView cart, notification;    private int position;    private List<AddressModel> addressModelList;    private EditAddressListAdapter editAddressListAdapter;    private TextView cartCount, notificationCount;    private FloatingActionButton fab;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_address);        if (!Homepage.isTablet(this)) {            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);        }        initialiseLayout();        setSupportActionBar(toolbar);        //noinspection ConstantConditions        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        SetStatusBarColor.setStausBarColor(this);        toolbarTitle.setText(R.string.address);        cartCount.setVisibility(View.GONE);        sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this);        setAddressListAdapter();        cart.setVisibility(View.GONE);        notification.setVisibility(View.GONE);        notificationCount.setVisibility(View.GONE);    }    private void initialiseLayout() {        toolbar = (Toolbar) findViewById(R.id.toolbar);        toolbarTitle = (TextView) findViewById(R.id.toolbar_title);        addressList = (ListView) findViewById(R.id.address_list);        cart = (ImageView) findViewById(R.id.cart);        cartCount = (TextView) findViewById(R.id.cart_number);        notification = (ImageView) findViewById(R.id.notification);        notificationCount = (TextView) findViewById(R.id.notification_number);        fab = (FloatingActionButton) findViewById(R.id.fab);    }    private void setAddressListAdapter() {        final SweetAlertDialog pDialog = new SweetAlertDialog(this, SweetAlertDialog.PROGRESS_TYPE);        pDialog.getProgressHelper().setBarColor(Color.parseColor("#F6705E"));        pDialog.setTitleText("Getting Address List");        pDialog.setCancelable(true);        pDialog.show();        new GetAddressData(this).getAddressData(pDialog, sharedPreferences.getString(SharedPrefrenceInfo.TOKEN_TYPE, "") + " " + sharedPreferences.getString(SharedPrefrenceInfo.IS_TOKEN_VALID, ""), new JsonResponseHolder() {            @Override            public void onResponse(String status, String message) {                if (status.equals("401")) {                    Utils.setTokenInfo(Address.this, pDialog, new AccessTokenInfoHolder() {                        @Override                        public void setAcessTokenInfo(String accessToken, String expires_in, String token_type) {                            pDialog.dismissWithAnimation();                            setAddressListAdapter();                        }                    });                } else {                    if (status.equals("true")) {                        try {                            JSONObject jsonObject = new JSONObject(message);                            addressModelList = new ArrayList<>();                            JSONObject jsonObject1 = jsonObject.getJSONObject("addresses");                            for (int i = 0; i < jsonObject1.names().length(); i++) {                                JSONObject jsonObject2 = jsonObject1.getJSONObject(jsonObject1.names().get(i).toString());                                AddressModel addressModel = new AddressModel();                                addressModel.setAddressId(jsonObject2.getString("address_id"));                                addressModel.setFirstName(jsonObject2.getString("firstname"));                                addressModel.setLastName(jsonObject2.getString("lastname"));                                addressModel.setCompany(jsonObject2.getString("company"));                                addressModel.setAddressOne(jsonObject2.getString("address_1"));                                addressModel.setAddressTwo(jsonObject2.getString("address_2"));                                addressModel.setPostcode(jsonObject2.getString("postcode"));                                addressModel.setCity(jsonObject2.getString("city"));                                addressModel.setCountry(jsonObject2.getString("country"));                                addressModel.setCountryId(jsonObject2.getString("country_id"));                                addressModel.setZoneId(jsonObject2.getString("zone_id"));                                addressModelList.add(addressModel);                            }                            editAddressListAdapter = new EditAddressListAdapter(Address.this, addressModelList, new EditAddressInfoHolder() {                                @Override                                public void onEditAddressClicked(int position) {                                    Address.this.position = position;                                    AddressModel addressModel = addressModelList.get(position);                                    Intent editAddressIntent = new Intent(Address.this, EditAddress.class);                                    editAddressIntent.putExtra("address_line_one", addressModel.getAddressOne());                                    editAddressIntent.putExtra("address_line_two", addressModel.getAddressTwo());                                    editAddressIntent.putExtra("city", addressModel.getCity());                                    editAddressIntent.putExtra("postcode", addressModel.getPostcode());                                    editAddressIntent.putExtra("country", addressModel.getCountry());                                    editAddressIntent.putExtra("country_id", addressModel.getCountryId());                                    editAddressIntent.putExtra("zone_id", addressModel.getZoneId());                                    editAddressIntent.putExtra("firstname", addressModel.getFirstName());                                    editAddressIntent.putExtra("lastname", addressModel.getLastName());                                    editAddressIntent.putExtra("address_id", addressModel.getAddressId());                                    startActivityForResult(editAddressIntent, ACTIVITY_REQUEST_CODE);                                }                            });                            addressList.setAdapter(editAddressListAdapter);                            pDialog.dismissWithAnimation();                        } catch (JSONException e) {                            e.printStackTrace();                        }                    } else {                        pDialog.changeAlertType(SweetAlertDialog.WARNING_TYPE);                        pDialog.setTitleText(message);                    }                }            }        });    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        int id = item.getItemId();        if (id == android.R.id.home) {            finish();            return true;        }        return super.onOptionsItemSelected(item);    }    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        if (requestCode == ACTIVITY_REQUEST_CODE) {            if (resultCode == Activity.RESULT_OK) {                String addressOne = data.getStringExtra("address_one");                String addressTwo = data.getStringExtra("address_two");                String city = data.getStringExtra("city");                String postcode = data.getStringExtra("postcode");                String country = data.getStringExtra("country");                AddressModel addressModel = addressModelList.get(position);                addressModel.setAddressOne(addressOne);                addressModel.setAddressTwo(addressTwo);                addressModel.setCity(city);                addressModel.setPostcode(postcode);                addressModel.setCountry(country);                editAddressListAdapter.notifyDataSetChanged();            }        }    }}