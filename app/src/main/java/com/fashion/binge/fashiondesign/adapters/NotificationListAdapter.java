package com.fashion.binge.fashiondesign.adapters;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.graphics.Color;import android.preference.PreferenceManager;import android.support.v7.app.AlertDialog;import android.text.Html;import android.text.method.LinkMovementMethod;import android.text.util.Linkify;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import com.bumptech.glide.Glide;import com.fashion.binge.fashiondesign.ProductDetail;import com.fashion.binge.fashiondesign.R;import com.fashion.binge.fashiondesign.ShopPageContent;import com.fashion.binge.fashiondesign.classes.JSONUrl;import com.fashion.binge.fashiondesign.models.NotificationModel;import com.fashion.binge.fashiondesign.shared_preference.SharedPrefrenceInfo;import java.util.HashSet;import java.util.List;import java.util.Set;public class NotificationListAdapter extends BaseAdapter {    private Context context;    private List<NotificationModel> notificationModelList;    private SharedPreferences sharedPreferences;    public NotificationListAdapter(Context context, List<NotificationModel> notificationModelList) {        this.context = context;        this.notificationModelList = notificationModelList;        sharedPreferences = PreferenceManager.getDefaultSharedPreferences(context);    }    @Override    public int getCount() {        return notificationModelList.size();    }    @Override    public Object getItem(int position) {        return position;    }    @Override    public long getItemId(int position) {        return position;    }    @Override    public View getView(int position, View convertView, ViewGroup parent) {        if (convertView == null) {            LayoutInflater layoutInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);            convertView = layoutInflater.inflate(R.layout.notification_list_content, parent, false);        }        final NotificationModel notificationModel = notificationModelList.get(position);        LinearLayout topParent = (LinearLayout) convertView.findViewById(R.id.top_parent);        TextView shopName = (TextView) convertView.findViewById(R.id.shop_name);        TextView title = (TextView) convertView.findViewById(R.id.title);        ImageView avatar = (ImageView) convertView.findViewById(R.id.avatar);        ImageView sellerImage = (ImageView) convertView.findViewById(R.id.seller_image);        avatar.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (!notificationModel.getSellerId().equals("null")) {                    Intent intent = new Intent(context, ShopPageContent.class);                    intent.putExtra("shop_banner", notificationModel.getSellerBanner());                    intent.putExtra("avatar", notificationModel.getSellerAvatar());                    intent.putExtra("id", notificationModel.getSellerId());                    intent.putExtra("seller_name", notificationModel.getSellerName());                    intent.putExtra("following_text", "FOLLOW");                    context.startActivity(intent);                }            }        });        shopName.setText(Html.fromHtml(notificationModel.getSellerName()));        title.setText(Html.fromHtml(notificationModel.getTitle()));        Glide.with(context)                .load(JSONUrl.IMAGE_BASE_URL + notificationModel.getSellerAvatar())                .into(avatar);        Glide.with(context)                .load(notificationModel.getThumb())                .into(sellerImage);        topParent.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                notificationModel.setBackgroundColor("#ffffff");                NotificationListAdapter.this.notifyDataSetChanged();                prepareDialog(notificationModel);            }        });        Set<String> idSet = sharedPreferences.getStringSet(SharedPrefrenceInfo.IDSET, new HashSet<String>());        if (idSet.size() > 0) {            for (int i = 0; i < idSet.size(); i++) {                if (idSet.contains(notificationModel.getSalesCombopgeId())) {                    topParent.setBackgroundColor(Color.parseColor("#ffffff"));                    break;                } else {                    topParent.setBackgroundColor(Color.parseColor(notificationModel.getBackgroundColor()));                }            }        } else {            topParent.setBackgroundColor(Color.parseColor(notificationModel.getBackgroundColor()));        }        return convertView;    }    private void prepareDialog(final NotificationModel notificationModel) {        //store the selected detail in hashset        Set<String> idSet = sharedPreferences.getStringSet(SharedPrefrenceInfo.IDSET, new HashSet<String>());        SharedPreferences.Editor editor = sharedPreferences.edit();        idSet.add(notificationModel.getSalesCombopgeId());        editor.remove(SharedPrefrenceInfo.IDSET);        editor.apply();        editor.putStringSet(SharedPrefrenceInfo.IDSET, idSet);        editor.apply();        //resuce count notification by 1        AlertDialog.Builder builder = new AlertDialog.Builder(context);        View view = View.inflate(context, R.layout.notification_dialog_view, null);        final ImageView shopImage = (ImageView) view.findViewById(R.id.shop_image);        ImageView avatar = (ImageView) view.findViewById(R.id.avatar);        TextView sellerName = (TextView) view.findViewById(R.id.seller_name);        TextView title = (TextView) view.findViewById(R.id.title);        TextView url = (TextView) view.findViewById(R.id.url);        TextView description = (TextView) view.findViewById(R.id.description);        TextView rules = (TextView) view.findViewById(R.id.rules);        Glide.with(context)                .load(JSONUrl.IMAGE_BASE_URL + notificationModel.getImage())                .into(shopImage);        if (!notificationModel.getImage().equals("")) {            shopImage.post(new Runnable() {                @Override                public void run() {                    shopImage.getLayoutParams().height = (int) (shopImage.getWidth() * 0.60);                }            });        } else {            shopImage.setVisibility(View.GONE);        }        Glide.with(context)                .load(JSONUrl.IMAGE_BASE_URL + notificationModel.getSellerAvatar())                .into(avatar);        sellerName.setText(notificationModel.getSellerNickName());        title.setText(notificationModel.getTitle());        String rule = Html.fromHtml(notificationModel.getRules()).toString();        rules.setText(Html.fromHtml(Html.fromHtml(rule).toString()));        url.setText(notificationModel.getHref());        Linkify.addLinks(url, Linkify.WEB_URLS);        url.setMovementMethod(LinkMovementMethod.getInstance());        String des = Html.fromHtml(notificationModel.getDescription()).toString();        description.setText(Html.fromHtml(des));        builder.setView(view);        final AlertDialog alertDialog = builder.create();        alertDialog.show();        avatar.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (!notificationModel.getSellerId().equals("null")) {                    Intent intent = new Intent(context, ShopPageContent.class);                    intent.putExtra("shop_banner", notificationModel.getSellerBanner());                    intent.putExtra("avatar", notificationModel.getSellerAvatar());                    intent.putExtra("id", notificationModel.getSellerId());                    intent.putExtra("seller_name", notificationModel.getSellerName());                    intent.putExtra("following_text", "FOLLOW");                    context.startActivity(intent);                }            }        });        if (!notificationModel.getProductId().equals("no_product_id")) {            shopImage.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    alertDialog.dismiss();                    Intent intent = new Intent(context, ProductDetail.class);                    intent.putExtra("id", notificationModel.getProductId());                    intent.putExtra("from", "notification");                    context.startActivity(intent);                }            });        }    }}