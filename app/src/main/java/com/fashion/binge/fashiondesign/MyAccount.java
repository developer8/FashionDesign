package com.fashion.binge.fashiondesign;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.content.pm.ActivityInfo;import android.graphics.Color;import android.net.Uri;import android.os.Bundle;import android.preference.PreferenceManager;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.Toolbar;import android.view.MenuItem;import android.view.View;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import com.fashion.binge.fashiondesign.classes.ConnectionManager;import com.fashion.binge.fashiondesign.classes.SetStatusBarColor;import com.fashion.binge.fashiondesign.interfaces.LogoutInfoHolder;import com.fashion.binge.fashiondesign.json.Logout;import com.fashion.binge.fashiondesign.shared_preference.SharedPrefrenceInfo;import com.fashion.binge.fashiondesign.sweetalertdialog.SweetAlertDialog;import java.util.HashSet;import java.util.Set;public class MyAccount extends AppCompatActivity implements View.OnClickListener {    private Toolbar toolbar;    private TextView toolbarTitle;    private LinearLayout editProfileParent, addressParent, changePasswordParent, logoutParent, facebook, instagram;    private SharedPreferences sharedPreferences;    private ImageView cart, notification;    private TextView cartNumber, notificationNumber;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_my_account_new);        if (!Homepage.isTablet(this)) {            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);        }        initialiseLayout();        initialiseListeners();        setSupportActionBar(toolbar);        //noinspection ConstantConditions        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        SetStatusBarColor.setStausBarColor(this);        toolbarTitle.setText(R.string.my_account);        sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this);    }    private void initialiseLayout() {        toolbar = (Toolbar) findViewById(R.id.toolbar);        toolbarTitle = (TextView) findViewById(R.id.toolbar_title);        editProfileParent = (LinearLayout) findViewById(R.id.edit_profile_parent);        addressParent = (LinearLayout) findViewById(R.id.address_parent);        changePasswordParent = (LinearLayout) findViewById(R.id.change_password_parent);        logoutParent = (LinearLayout) findViewById(R.id.logout_parent);        facebook = (LinearLayout) findViewById(R.id.facebook);        instagram = (LinearLayout) findViewById(R.id.instagram);        cart = (ImageView) findViewById(R.id.cart);        cartNumber = (TextView) findViewById(R.id.cart_number);        notification = (ImageView) findViewById(R.id.notification);        notificationNumber = (TextView) findViewById(R.id.notification_number);    }    private void initialiseListeners() {        editProfileParent.setOnClickListener(this);        addressParent.setOnClickListener(this);        changePasswordParent.setOnClickListener(this);        logoutParent.setOnClickListener(this);        cart.setOnClickListener(this);        facebook.setOnClickListener(this);        instagram.setOnClickListener(this);        cart.setOnClickListener(this);        notification.setOnClickListener(this);    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        int id = item.getItemId();        if (id == android.R.id.home) {            finish();            return true;        }        return super.onOptionsItemSelected(item);    }    public Intent getOpenFacebookIntent(Context context) {        try {            context.getPackageManager().getPackageInfo("com.facebook.katana", 0);            return new Intent(Intent.ACTION_VIEW, Uri.parse("fb://page/160670357463263"));        } catch (Exception e) {            return new Intent(Intent.ACTION_VIEW, Uri.parse("https://www.facebook.com/160670357463263"));        }    }    public Intent getOpenInstagramIntent(Context context) {        try {            context.getPackageManager().getPackageInfo("com.instagram.android", 0);            return new Intent(Intent.ACTION_VIEW, Uri.parse("instagram://user?username=binge_sg"));        } catch (Exception e) {            return new Intent(Intent.ACTION_VIEW, Uri.parse("https://instagram://user?username=binge_sg"));        }    }    @Override    public void onClick(View v) {        int id = v.getId();        switch (id) {            case R.id.edit_profile_parent:                Intent editIntent = new Intent(MyAccount.this, EditProfile.class);                startActivity(editIntent);                break;            case R.id.address_parent:                Intent addressIntent = new Intent(MyAccount.this, Address.class);                startActivity(addressIntent);                break;            case R.id.change_password_parent:                Intent changePasswordIntent = new Intent(MyAccount.this, ChangePassword.class);                startActivity(changePasswordIntent);                break;            case R.id.cart:                Intent intent = new Intent(MyAccount.this, Cart.class);                startActivity(intent);                break;            case R.id.facebook:                Intent facebookIntent = getOpenFacebookIntent(MyAccount.this);                startActivity(facebookIntent);                break;            case R.id.instagram:                Intent instagramIntent = getOpenInstagramIntent(MyAccount.this);                startActivity(instagramIntent);                break;            case R.id.notification:                Intent notificationIntent = new Intent(MyAccount.this, Cart.class);                startActivity(notificationIntent);                break;            case R.id.logout_parent:                if (new ConnectionManager(this).isConnectedToInternet()) {                    final SweetAlertDialog pDialog = new SweetAlertDialog(this, SweetAlertDialog.PROGRESS_TYPE);                    pDialog.getProgressHelper().setBarColor(Color.parseColor("#F6705E"));                    pDialog.setTitleText("Logging out");                    pDialog.setCancelable(true);                    pDialog.show();                    new Logout(this).requestLogout(pDialog, sharedPreferences.getString(SharedPrefrenceInfo.TOKEN_TYPE, "") + " " + sharedPreferences.getString(SharedPrefrenceInfo.IS_TOKEN_VALID, ""), new LogoutInfoHolder() {                        @Override                        public void logoutInfo(String success, String data) {                            if (success.equals("true")) {                                pDialog.changeAlertType(SweetAlertDialog.SUCCESS_TYPE);                                pDialog.setTitleText("Logout successful");                                SharedPreferences.Editor editor = sharedPreferences.edit();                                editor.putString(SharedPrefrenceInfo.IS_USER_LOGGED_IN, "false");                                editor.putString(SharedPrefrenceInfo.CART_COUNT, "0");                                editor.apply();                                pDialog.dismissWithAnimation();                                MyAccount.this.finish();                            } else {                                pDialog.changeAlertType(SweetAlertDialog.WARNING_TYPE);                                pDialog.setTitleText("Error in logout...");                            }                        }                    });                } else {                    new SweetAlertDialog(this, SweetAlertDialog.ERROR_TYPE)                            .setTitleText("Oops...")                            .setContentText("No internet connection!")                            .show();                }                break;        }    }    @Override    protected void onPostResume() {        super.onPostResume();        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this);        cartNumber.setText(sharedPreferences.getString(SharedPrefrenceInfo.CART_COUNT, "0"));        if (cartNumber.getText().toString().equals("0")) {            cartNumber.setVisibility(View.GONE);        } else {            cartNumber.setVisibility(View.VISIBLE);        }        Set<String> id = sharedPreferences.getStringSet(SharedPrefrenceInfo.IDSET, new HashSet<String>());        int size = id.size();        int count = Integer.parseInt(sharedPreferences.getString(SharedPrefrenceInfo.NOTIFICATION_COUNT, "0"));        if ((count - size) > 0) {            notificationNumber.setVisibility(View.VISIBLE);            notificationNumber.setText(String.valueOf(count-size));        } else {            notificationNumber.setVisibility(View.GONE);        }    }}