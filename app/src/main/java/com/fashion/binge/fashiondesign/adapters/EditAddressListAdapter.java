package com.fashion.binge.fashiondesign.adapters;import android.content.Context;import android.content.DialogInterface;import android.content.SharedPreferences;import android.graphics.Color;import android.preference.PreferenceManager;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.TextView;import com.fashion.binge.fashiondesign.R;import com.fashion.binge.fashiondesign.classes.Utils;import com.fashion.binge.fashiondesign.interfaces.AccessTokenInfoHolder;import com.fashion.binge.fashiondesign.interfaces.EditAddressInfoHolder;import com.fashion.binge.fashiondesign.interfaces.ResponseInfoHolder;import com.fashion.binge.fashiondesign.json.DeleteAddressAccount;import com.fashion.binge.fashiondesign.models.AddressModel;import com.fashion.binge.fashiondesign.shared_preference.SharedPrefrenceInfo;import com.fashion.binge.fashiondesign.sweetalertdialog.SweetAlertDialog;import java.util.List;public class EditAddressListAdapter extends BaseAdapter {    private Context context;    private List<AddressModel> addressesList;    private EditAddressInfoHolder editAddressInfoHolder;    public EditAddressListAdapter(Context context, List<AddressModel> addressesList, EditAddressInfoHolder editAddressInfoHolder) {        this.context = context;        this.addressesList = addressesList;        this.editAddressInfoHolder = editAddressInfoHolder;    }    @Override    public int getCount() {        return addressesList.size();    }    @Override    public Object getItem(int position) {        return position;    }    @Override    public long getItemId(int position) {        return position;    }    @Override    public View getView(final int position, View convertView, final ViewGroup parent) {        if (convertView == null) {            LayoutInflater layoutInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);            convertView = layoutInflater.inflate(R.layout.edit_address_layout_content, parent, false);        }        final AddressModel addressModel = addressesList.get(position);        TextView name = (TextView) convertView.findViewById(R.id.name);        TextView addressOne = (TextView) convertView.findViewById(R.id.address_one);        TextView addressTwo = (TextView) convertView.findViewById(R.id.address_two);        TextView country = (TextView) convertView.findViewById(R.id.country);        name.setText(String.format("%s %s", addressModel.getFirstName(), addressModel.getLastName()));        addressOne.setText(addressModel.getAddressOne());        addressTwo.setText(addressModel.getCity());        country.setText(addressModel.getCountry());        ImageView editAddress = (ImageView) convertView.findViewById(R.id.edit_address);        editAddress.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                editAddressInfoHolder.onEditAddressClicked(position);            }        });        ImageView deleteAddress = (ImageView) convertView.findViewById(R.id.delete_address);        deleteAddress.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                deleteAddress(addressModel.getAddressId(), position);            }        });        if (position == 0) {            deleteAddress.setVisibility(View.INVISIBLE);        } else {            deleteAddress.setVisibility(View.VISIBLE);        }        return convertView;    }    private void deleteAddress(final String id, final int position) {        final SweetAlertDialog pDialog = new SweetAlertDialog(context, SweetAlertDialog.PROGRESS_TYPE);        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(context);        pDialog.getProgressHelper().setBarColor(Color.parseColor("#F6705E"));        pDialog.setTitleText("Editing your address");        pDialog.setCancelable(true);        pDialog.show();        new DeleteAddressAccount(context).deleteAddressAccount(pDialog, id, sharedPreferences.getString(SharedPrefrenceInfo.TOKEN_TYPE, "") + " " + sharedPreferences.getString(SharedPrefrenceInfo.IS_TOKEN_VALID, ""), new ResponseInfoHolder() {            @Override            public void setFollowingInfo(String success, String data) {                if (success.equals("401")) {                    Utils.setTokenInfo(context, pDialog, new AccessTokenInfoHolder() {                        @Override                        public void setAcessTokenInfo(String accessToken, String expires_in, String token_type) {                            pDialog.dismissWithAnimation();                            deleteAddress(id, position);                        }                    });                } else {                    if (success.equals("true")) {                        pDialog.dismissWithAnimation();                        pDialog.setOnDismissListener(new DialogInterface.OnDismissListener() {                            @Override                            public void onDismiss(DialogInterface dialog) {                                addressesList.remove(position);                                EditAddressListAdapter.this.notifyDataSetChanged();                            }                        });                    } else {                        pDialog.changeAlertType(SweetAlertDialog.WARNING_TYPE);                        pDialog.setTitleText(data);                    }                }            }        });    }}